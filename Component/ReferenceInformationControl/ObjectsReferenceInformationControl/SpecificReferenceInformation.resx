<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABO
        CAAAAk1TRnQBSQFMAwEBAAEIAQABCAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ARADAAEBAQABIAYAARAVAAEBAS4BNQE6AUsBNwFeAX4BrAEtAWYBlgHGAS0BZwGWAccBLQFnAZYBxwEv
        AWgBlgHHAS8BaAGWAccBLQFlAZYBxwEtAWUBlgHHAS0BZwGWAccBLwFoAZYBxwEtAWUBlgHHATIBXgGH
        AbgBNgFDAUwBZAMKAQ3AAAEnASsBLQE5ATUBkAHFAeABJgGbAe4B/QEiAZcB8AH+ASMBmAHxAf4BIwGX
        Ae8B/gEsAZoB7wH+ATEBnAHvAf4BIQGVAe4B/gEjAZYB7gH+AScBmAHvAf4BMAGcAe8B/gEhAZYB7gH+
        ASMBlQHrAf0BMwGWAdQB6wE5AUcBTgFgwAABQQFrAYIBnQEuAaMB9AH+ASoBnQHxAf4BKgGfAfMB/wEq
        AaAB8wH/ASoBoAHzAf8BKwGgAfQB/wErAaEB9AH/ASkBoAH0Af8BKgGhAfQB/wErAaIB9AH/ASoBowH0
        Af8BKgGiAfQB/wErAaIB8gH+AS4BpQH0Af4BQgF7AZ0BtsAAAT4BdQGcAbUBKQGjAfUB/wErAaIB8wH+
        ASoBpAH1Af8BKgGkAfUB/wEqAaQB9QH/ASsBpQH1Af8BKwGlAfUB/wEqAaYB9gH/ASoBpgH2Af8BKwGn
        AfYB/wErAacB9gH/ASsBqAH2Af8BKwGoAfYB/wEsAagB9QH+ATwBhQGyAcjAAAE/AXoBngG3ASsBqQH3
        Af8BLAGnAfQB/gErAakB9gH/ASsBqQH2Af8BKwGqAfcB/wErAaoB9wH/ASsBqwH3Af8BLAGrAfcB/wEs
        AawB9wH/ASwBrAH3Af8BLAGtAfcB/wEsAa0B+AH/ASwBrgH3Af8BLgGuAfcB/gE+AYoBtAHJwAABPwF9
        AaEBuAEtAa8B+QH/AS4BrQH2Af4BLQGvAfgB/wEtAbAB+AH/AS0BsAH5Af8BLQGxAfkB/wEtAbEB+QH/
        AS4BsgH5Af8BLgGyAfkB/wEuAbMB+QH/AS4BtAH5Af8BLgG0AfoB/wEuAbQB+QH/ATABtAH5Af4BPwGO
        AbcBysAAAUEBgQGhAbgBLgG1AfoB/wEwAbMB+AH+AS4BtQH6Af8BLgG2AfoB/wEvAbYB+gH/AS8BtwH6
        Af8BLwG3AfoB/wEvAbgB+wH/AS8BuAH7Af8BLwG5AfsB/wEvAbkB+wH/AS8BugH7Af8BMAG6AfoB/wEx
        AboB+gH+AT8BkQG3AcrAAAFCAXoBmQG2AS4BvAH9Af8BLwG5AfkB/gEwAbsB+wH/ATABuwH7Af8BLwG8
        AfsB/wEvAbwB/AH/AS4BvQH8Af8BLwG9AfwB/wEvAb0B+wH/ATEBvgH7Af8BMQG+AfsB/wExAb4B+wH/
        ATEBvwH7Af8BMQHAAfwB/gFBAYwBsQHIwAABOQFxAZoBtQFOAa4B3wH/AUwBvgHqAf4BNQHBAfsB/wE1
        AcEB/AH/ATgBwwH8Af8BPAHFAf0B/wE+AcUB/QH/AT0BxgH+Af8BQwHFAfcB/wFIAcQB8QH/AUUBxAHy
        Af8BQwHCAe8B/wFIAcMB7QH/AU4BrwHaAf4BPAF6AaYByMAAATUBcQGfAbUBfgGrAcwB/wGmAboBvwH+
        AVABxwHzAf8BRgHMAf4B/wFHAc0B/gH/AUkBzgH+Af8BSgHOAf0B/wFDAdAC/wF2AcQB3gH/Aa0BvAHA
        Af8BrAG/AcUB/wGfAbIBuAH/AakBtwG6Af8BiQGlAboB/gE+AXkBpgHIwAABOQFzAZ4BtQGQAboB2QH/
        AskByAH+AYsBywHfAf8BeQHPAekB/wF5Ac8B6QH/AXkBzwHpAf8BegHPAegB/wF1AdAB6gH/AaUBxwHR
        Af8ByQLGAf8BywHKAcsB/wO6Af8BxQLDAf8BnAG0AccB/gFEAX4BqAHIwAABQgF4AZ8BtQGcAcQB4AH/
        AdUB0QHPAf4BygHEAcIB/wHLAcIBvwH/AcsBwgG/Af8BywHCAb8B/wHLAcIBvwH/AcsBwQG+Af8BygHG
        AcUB/wPOAf8C1AHVAf8CwAHBAf8BzAHLAcoB/wGlAb0BzgH+AU4BhAGqAcjAAAFHAXoBnQGzAXsBvwHt
        Af8B2wHdAd8B/gLgAeEB/wHgAuEB/wHeAuEB/wHfAuEB/wHfAuEB/wHfAuEB/wHfAeAB4QH/A+EB/wHX
        AtgB/wLJAcoB/wLTAdIB/wGsAcUB1gH+AU0BhgGqAcfAAAFMAXUBjQGgAUwBswH1Af8BhQHHAe4B/gGg
        AdIB7wH/AcsB3QHmAf8B7QHpAeYB/wHqAucB/wHqAecB5gH/AeoB5wHmAf8B6gHnAeYB/wHpAecB5QH/
        AeEB3gHdAf8B3QHbAdoB/wHiAd4B3QH/AaAByAHgAf4BTwGFAaUBuMAAASwBMwE3AUABSgGtAekB8wFH
        AbcB9wH/AUUBugH5Af8BYQHBAfIB/wG7AdwB6wH/AcwB4QHrAf8BywHiAesB/wHLAeMB6wH/AcsB4gHr
        Af8BywHiAesB/wHKAeAB6gH/AcsB4AHrAf8BsgHWAeoB/gFiAbkB5wH2AUEBVQFgAWzEAAE7AUoBUgFd
        AVABrgHdAeYBTAHBAfoB/wFLAcUB/AH/AUMBxQH8Af8BSAHKAf0B/wFJAc0B/gH/AUkB0AL/AUkBzwL/
        AUgBzAH+Af8BRwHJAfwB/wFGAcUB+wH/AUUBtwHrAfIBSQFoAXcBgwMLAQ7AAAFCAU0BPgcAAT4DAAEo
        AwABQAMAARADAAEBAQABAQUAAYAXAAP/eQABgAcACw==
</value>
  </data>
</root>